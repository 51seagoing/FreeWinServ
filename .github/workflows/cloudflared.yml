name: Windows-RDP-Cloudflared

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 360
    
    steps:
    - name: Download Cloudflared
      run: |
        Invoke-WebRequest -Uri "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe" -OutFile "cloudflared.exe"
    
    - name: Enable RDP
      run: |
        # 启用 RDP 服务
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        
        # 启用 Network Level Authentication
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
        
        # 启用防火墙规则
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        
        # 启动 Remote Desktop 服务
        Start-Service TermService
        Set-Service TermService -StartupType Automatic
        
        # 设置用户密码
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
        
        # 验证 RDP 服务状态
        $rdpService = Get-Service TermService
        Write-Host "RDP Service Status: $($rdpService.Status)"
        
        # 等待服务完全启动
        Start-Sleep -Seconds 5
    
    - name: Create Tunnel
      run: |
        Write-Host "Starting Cloudflare Tunnel..."
        Write-Host "============================================"
        
        # 验证令牌
        if (-not $env:TUNNEL_TOKEN) {
            Write-Error "Tunnel token is not set!"
            exit 1
        }
        
        # 确保 RDP 端口可访问
        $testPort = Test-NetConnection -ComputerName localhost -Port 3389
        Write-Host "RDP Port Status: $($testPort.TcpTestSucceeded)"
        
        # 直接运行隧道
        Write-Host "Running tunnel with token..."
        .\cloudflared.exe tunnel run --token "$env:TUNNEL_TOKEN"
      env:
        TUNNEL_TOKEN: ${{ secrets.CLOUDFLARED_TOKEN }}